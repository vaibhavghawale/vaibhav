
Question 4: Explain Generics in Java and Its Importance with example.

Ans:=

Generics means parameterized types. The idea is to allow type (Integer, String, â€¦ etc.,
 and user-defined types) to be a parameter to methods, classes, and interfaces. Using Generics, it is possible to create classes that work with different data types. An entity such as class, 
 interface, or method that operates on a parameterized type is a generic entity.

Why Generics?
The Object is the superclass of all other classes, and Object reference can refer to any object. These features lack type safety.
 Generics add that type of safety feature. We will discuss that type of safety feature in later examples.

Generics in Java are similar to templates in C++. For example, 
classes like HashSet, ArrayList, HashMap, etc., use generics very well. 
There are some fundamental differences between the two approaches to generic types. 

Example:= 

class Test<T> {
    // An object of type T is declared
    T obj;
    Test(T obj) { this.obj = obj; } // constructor
    public T getObject() { return this.obj; }
}
  
// Driver class to test above
class Main {
    public static void main(String[] args)
    {
        // instance of Integer type
        Test<Integer> iObj = new Test<Integer>(15);
        System.out.println(iObj.getObject());
  
        // instance of String type
        Test<String> sObj
            = new Test<String>("GeeksForGeeks");
        System.out.println(sObj.getObject());
    }
}